//
// Copyright 2025 - 2025 (C). Alex Robenko. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#include "CProgramOptions.h"

namespace commsdsl2c
{

namespace
{

const std::string CNamesPrefixStr("names-prefix");
const std::string CFullNamesPrefixStr("p," + CNamesPrefixStr);
const std::string CCommsOptionsStr("comms-options");
const std::string CCommsInterfaceStr("comms-interface");

} // namespace

CProgramOptions::CProgramOptions()
{
    genAddCommonOptions()
    (CFullNamesPrefixStr, 
        "Prefix to all generated structs and functions. "
        "If not provided the main namespace name is used.",
        true)
    (CCommsOptionsStr, 
        "Scope for the options structure generated by the commsdsl2comms. "
        "If not provided \"DefaultOptions\" is used. "
        "In case of multiple schemas use comma separation between scopes. "
        "In case of single schema, just the name of the options without the full scope is also supported.",
        true)
    (CCommsInterfaceStr, 
        "Force usage of the provided interface (CommsDSL reference string).", true)    
    ;
}

const std::string& CProgramOptions::cGetNamesPrefix() const
{
    return genValue(CNamesPrefixStr);
}

const std::string& CProgramOptions::cGetCommsOptions() const
{
    return genValue(CCommsOptionsStr);
}

const std::string& CProgramOptions::cGetCommsInterface() const
{
    return genValue(CCommsInterfaceStr);
}

} // namespace commsdsl2c
